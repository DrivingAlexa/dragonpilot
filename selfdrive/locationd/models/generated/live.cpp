#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6296950856560866654) {
   out_6296950856560866654[0] = 0;
   out_6296950856560866654[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6296950856560866654[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6296950856560866654[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6296950856560866654[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6296950856560866654[5] = -sin(in_vec[1]);
   out_6296950856560866654[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6296950856560866654[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6296950856560866654[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6296950856560866654[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6296950856560866654[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6296950856560866654[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6296950856560866654[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6296950856560866654[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6296950856560866654[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6296950856560866654[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6296950856560866654[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6296950856560866654[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2899646891747653485) {
   out_2899646891747653485[0] = delta_x[0] + nom_x[0];
   out_2899646891747653485[1] = delta_x[1] + nom_x[1];
   out_2899646891747653485[2] = delta_x[2] + nom_x[2];
   out_2899646891747653485[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2899646891747653485[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2899646891747653485[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2899646891747653485[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2899646891747653485[7] = delta_x[6] + nom_x[7];
   out_2899646891747653485[8] = delta_x[7] + nom_x[8];
   out_2899646891747653485[9] = delta_x[8] + nom_x[9];
   out_2899646891747653485[10] = delta_x[9] + nom_x[10];
   out_2899646891747653485[11] = delta_x[10] + nom_x[11];
   out_2899646891747653485[12] = delta_x[11] + nom_x[12];
   out_2899646891747653485[13] = delta_x[12] + nom_x[13];
   out_2899646891747653485[14] = delta_x[13] + nom_x[14];
   out_2899646891747653485[15] = delta_x[14] + nom_x[15];
   out_2899646891747653485[16] = delta_x[15] + nom_x[16];
   out_2899646891747653485[17] = delta_x[16] + nom_x[17];
   out_2899646891747653485[18] = delta_x[17] + nom_x[18];
   out_2899646891747653485[19] = delta_x[18] + nom_x[19];
   out_2899646891747653485[20] = delta_x[19] + nom_x[20];
   out_2899646891747653485[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8154559542040542297) {
   out_8154559542040542297[0] = -nom_x[0] + true_x[0];
   out_8154559542040542297[1] = -nom_x[1] + true_x[1];
   out_8154559542040542297[2] = -nom_x[2] + true_x[2];
   out_8154559542040542297[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8154559542040542297[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8154559542040542297[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8154559542040542297[6] = -nom_x[7] + true_x[7];
   out_8154559542040542297[7] = -nom_x[8] + true_x[8];
   out_8154559542040542297[8] = -nom_x[9] + true_x[9];
   out_8154559542040542297[9] = -nom_x[10] + true_x[10];
   out_8154559542040542297[10] = -nom_x[11] + true_x[11];
   out_8154559542040542297[11] = -nom_x[12] + true_x[12];
   out_8154559542040542297[12] = -nom_x[13] + true_x[13];
   out_8154559542040542297[13] = -nom_x[14] + true_x[14];
   out_8154559542040542297[14] = -nom_x[15] + true_x[15];
   out_8154559542040542297[15] = -nom_x[16] + true_x[16];
   out_8154559542040542297[16] = -nom_x[17] + true_x[17];
   out_8154559542040542297[17] = -nom_x[18] + true_x[18];
   out_8154559542040542297[18] = -nom_x[19] + true_x[19];
   out_8154559542040542297[19] = -nom_x[20] + true_x[20];
   out_8154559542040542297[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4390300350310679035) {
   out_4390300350310679035[0] = 1.0;
   out_4390300350310679035[1] = 0;
   out_4390300350310679035[2] = 0;
   out_4390300350310679035[3] = 0;
   out_4390300350310679035[4] = 0;
   out_4390300350310679035[5] = 0;
   out_4390300350310679035[6] = 0;
   out_4390300350310679035[7] = 0;
   out_4390300350310679035[8] = 0;
   out_4390300350310679035[9] = 0;
   out_4390300350310679035[10] = 0;
   out_4390300350310679035[11] = 0;
   out_4390300350310679035[12] = 0;
   out_4390300350310679035[13] = 0;
   out_4390300350310679035[14] = 0;
   out_4390300350310679035[15] = 0;
   out_4390300350310679035[16] = 0;
   out_4390300350310679035[17] = 0;
   out_4390300350310679035[18] = 0;
   out_4390300350310679035[19] = 0;
   out_4390300350310679035[20] = 0;
   out_4390300350310679035[21] = 0;
   out_4390300350310679035[22] = 1.0;
   out_4390300350310679035[23] = 0;
   out_4390300350310679035[24] = 0;
   out_4390300350310679035[25] = 0;
   out_4390300350310679035[26] = 0;
   out_4390300350310679035[27] = 0;
   out_4390300350310679035[28] = 0;
   out_4390300350310679035[29] = 0;
   out_4390300350310679035[30] = 0;
   out_4390300350310679035[31] = 0;
   out_4390300350310679035[32] = 0;
   out_4390300350310679035[33] = 0;
   out_4390300350310679035[34] = 0;
   out_4390300350310679035[35] = 0;
   out_4390300350310679035[36] = 0;
   out_4390300350310679035[37] = 0;
   out_4390300350310679035[38] = 0;
   out_4390300350310679035[39] = 0;
   out_4390300350310679035[40] = 0;
   out_4390300350310679035[41] = 0;
   out_4390300350310679035[42] = 0;
   out_4390300350310679035[43] = 0;
   out_4390300350310679035[44] = 1.0;
   out_4390300350310679035[45] = 0;
   out_4390300350310679035[46] = 0;
   out_4390300350310679035[47] = 0;
   out_4390300350310679035[48] = 0;
   out_4390300350310679035[49] = 0;
   out_4390300350310679035[50] = 0;
   out_4390300350310679035[51] = 0;
   out_4390300350310679035[52] = 0;
   out_4390300350310679035[53] = 0;
   out_4390300350310679035[54] = 0;
   out_4390300350310679035[55] = 0;
   out_4390300350310679035[56] = 0;
   out_4390300350310679035[57] = 0;
   out_4390300350310679035[58] = 0;
   out_4390300350310679035[59] = 0;
   out_4390300350310679035[60] = 0;
   out_4390300350310679035[61] = 0;
   out_4390300350310679035[62] = 0;
   out_4390300350310679035[63] = 0;
   out_4390300350310679035[64] = 0;
   out_4390300350310679035[65] = 0;
   out_4390300350310679035[66] = -0.5*state[4];
   out_4390300350310679035[67] = -0.5*state[5];
   out_4390300350310679035[68] = -0.5*state[6];
   out_4390300350310679035[69] = 0;
   out_4390300350310679035[70] = 0;
   out_4390300350310679035[71] = 0;
   out_4390300350310679035[72] = 0;
   out_4390300350310679035[73] = 0;
   out_4390300350310679035[74] = 0;
   out_4390300350310679035[75] = 0;
   out_4390300350310679035[76] = 0;
   out_4390300350310679035[77] = 0;
   out_4390300350310679035[78] = 0;
   out_4390300350310679035[79] = 0;
   out_4390300350310679035[80] = 0;
   out_4390300350310679035[81] = 0;
   out_4390300350310679035[82] = 0;
   out_4390300350310679035[83] = 0;
   out_4390300350310679035[84] = 0;
   out_4390300350310679035[85] = 0;
   out_4390300350310679035[86] = 0;
   out_4390300350310679035[87] = 0.5*state[3];
   out_4390300350310679035[88] = 0.5*state[6];
   out_4390300350310679035[89] = -0.5*state[5];
   out_4390300350310679035[90] = 0;
   out_4390300350310679035[91] = 0;
   out_4390300350310679035[92] = 0;
   out_4390300350310679035[93] = 0;
   out_4390300350310679035[94] = 0;
   out_4390300350310679035[95] = 0;
   out_4390300350310679035[96] = 0;
   out_4390300350310679035[97] = 0;
   out_4390300350310679035[98] = 0;
   out_4390300350310679035[99] = 0;
   out_4390300350310679035[100] = 0;
   out_4390300350310679035[101] = 0;
   out_4390300350310679035[102] = 0;
   out_4390300350310679035[103] = 0;
   out_4390300350310679035[104] = 0;
   out_4390300350310679035[105] = 0;
   out_4390300350310679035[106] = 0;
   out_4390300350310679035[107] = 0;
   out_4390300350310679035[108] = -0.5*state[6];
   out_4390300350310679035[109] = 0.5*state[3];
   out_4390300350310679035[110] = 0.5*state[4];
   out_4390300350310679035[111] = 0;
   out_4390300350310679035[112] = 0;
   out_4390300350310679035[113] = 0;
   out_4390300350310679035[114] = 0;
   out_4390300350310679035[115] = 0;
   out_4390300350310679035[116] = 0;
   out_4390300350310679035[117] = 0;
   out_4390300350310679035[118] = 0;
   out_4390300350310679035[119] = 0;
   out_4390300350310679035[120] = 0;
   out_4390300350310679035[121] = 0;
   out_4390300350310679035[122] = 0;
   out_4390300350310679035[123] = 0;
   out_4390300350310679035[124] = 0;
   out_4390300350310679035[125] = 0;
   out_4390300350310679035[126] = 0;
   out_4390300350310679035[127] = 0;
   out_4390300350310679035[128] = 0;
   out_4390300350310679035[129] = 0.5*state[5];
   out_4390300350310679035[130] = -0.5*state[4];
   out_4390300350310679035[131] = 0.5*state[3];
   out_4390300350310679035[132] = 0;
   out_4390300350310679035[133] = 0;
   out_4390300350310679035[134] = 0;
   out_4390300350310679035[135] = 0;
   out_4390300350310679035[136] = 0;
   out_4390300350310679035[137] = 0;
   out_4390300350310679035[138] = 0;
   out_4390300350310679035[139] = 0;
   out_4390300350310679035[140] = 0;
   out_4390300350310679035[141] = 0;
   out_4390300350310679035[142] = 0;
   out_4390300350310679035[143] = 0;
   out_4390300350310679035[144] = 0;
   out_4390300350310679035[145] = 0;
   out_4390300350310679035[146] = 0;
   out_4390300350310679035[147] = 0;
   out_4390300350310679035[148] = 0;
   out_4390300350310679035[149] = 0;
   out_4390300350310679035[150] = 0;
   out_4390300350310679035[151] = 0;
   out_4390300350310679035[152] = 0;
   out_4390300350310679035[153] = 1.0;
   out_4390300350310679035[154] = 0;
   out_4390300350310679035[155] = 0;
   out_4390300350310679035[156] = 0;
   out_4390300350310679035[157] = 0;
   out_4390300350310679035[158] = 0;
   out_4390300350310679035[159] = 0;
   out_4390300350310679035[160] = 0;
   out_4390300350310679035[161] = 0;
   out_4390300350310679035[162] = 0;
   out_4390300350310679035[163] = 0;
   out_4390300350310679035[164] = 0;
   out_4390300350310679035[165] = 0;
   out_4390300350310679035[166] = 0;
   out_4390300350310679035[167] = 0;
   out_4390300350310679035[168] = 0;
   out_4390300350310679035[169] = 0;
   out_4390300350310679035[170] = 0;
   out_4390300350310679035[171] = 0;
   out_4390300350310679035[172] = 0;
   out_4390300350310679035[173] = 0;
   out_4390300350310679035[174] = 0;
   out_4390300350310679035[175] = 1.0;
   out_4390300350310679035[176] = 0;
   out_4390300350310679035[177] = 0;
   out_4390300350310679035[178] = 0;
   out_4390300350310679035[179] = 0;
   out_4390300350310679035[180] = 0;
   out_4390300350310679035[181] = 0;
   out_4390300350310679035[182] = 0;
   out_4390300350310679035[183] = 0;
   out_4390300350310679035[184] = 0;
   out_4390300350310679035[185] = 0;
   out_4390300350310679035[186] = 0;
   out_4390300350310679035[187] = 0;
   out_4390300350310679035[188] = 0;
   out_4390300350310679035[189] = 0;
   out_4390300350310679035[190] = 0;
   out_4390300350310679035[191] = 0;
   out_4390300350310679035[192] = 0;
   out_4390300350310679035[193] = 0;
   out_4390300350310679035[194] = 0;
   out_4390300350310679035[195] = 0;
   out_4390300350310679035[196] = 0;
   out_4390300350310679035[197] = 1.0;
   out_4390300350310679035[198] = 0;
   out_4390300350310679035[199] = 0;
   out_4390300350310679035[200] = 0;
   out_4390300350310679035[201] = 0;
   out_4390300350310679035[202] = 0;
   out_4390300350310679035[203] = 0;
   out_4390300350310679035[204] = 0;
   out_4390300350310679035[205] = 0;
   out_4390300350310679035[206] = 0;
   out_4390300350310679035[207] = 0;
   out_4390300350310679035[208] = 0;
   out_4390300350310679035[209] = 0;
   out_4390300350310679035[210] = 0;
   out_4390300350310679035[211] = 0;
   out_4390300350310679035[212] = 0;
   out_4390300350310679035[213] = 0;
   out_4390300350310679035[214] = 0;
   out_4390300350310679035[215] = 0;
   out_4390300350310679035[216] = 0;
   out_4390300350310679035[217] = 0;
   out_4390300350310679035[218] = 0;
   out_4390300350310679035[219] = 1.0;
   out_4390300350310679035[220] = 0;
   out_4390300350310679035[221] = 0;
   out_4390300350310679035[222] = 0;
   out_4390300350310679035[223] = 0;
   out_4390300350310679035[224] = 0;
   out_4390300350310679035[225] = 0;
   out_4390300350310679035[226] = 0;
   out_4390300350310679035[227] = 0;
   out_4390300350310679035[228] = 0;
   out_4390300350310679035[229] = 0;
   out_4390300350310679035[230] = 0;
   out_4390300350310679035[231] = 0;
   out_4390300350310679035[232] = 0;
   out_4390300350310679035[233] = 0;
   out_4390300350310679035[234] = 0;
   out_4390300350310679035[235] = 0;
   out_4390300350310679035[236] = 0;
   out_4390300350310679035[237] = 0;
   out_4390300350310679035[238] = 0;
   out_4390300350310679035[239] = 0;
   out_4390300350310679035[240] = 0;
   out_4390300350310679035[241] = 1.0;
   out_4390300350310679035[242] = 0;
   out_4390300350310679035[243] = 0;
   out_4390300350310679035[244] = 0;
   out_4390300350310679035[245] = 0;
   out_4390300350310679035[246] = 0;
   out_4390300350310679035[247] = 0;
   out_4390300350310679035[248] = 0;
   out_4390300350310679035[249] = 0;
   out_4390300350310679035[250] = 0;
   out_4390300350310679035[251] = 0;
   out_4390300350310679035[252] = 0;
   out_4390300350310679035[253] = 0;
   out_4390300350310679035[254] = 0;
   out_4390300350310679035[255] = 0;
   out_4390300350310679035[256] = 0;
   out_4390300350310679035[257] = 0;
   out_4390300350310679035[258] = 0;
   out_4390300350310679035[259] = 0;
   out_4390300350310679035[260] = 0;
   out_4390300350310679035[261] = 0;
   out_4390300350310679035[262] = 0;
   out_4390300350310679035[263] = 1.0;
   out_4390300350310679035[264] = 0;
   out_4390300350310679035[265] = 0;
   out_4390300350310679035[266] = 0;
   out_4390300350310679035[267] = 0;
   out_4390300350310679035[268] = 0;
   out_4390300350310679035[269] = 0;
   out_4390300350310679035[270] = 0;
   out_4390300350310679035[271] = 0;
   out_4390300350310679035[272] = 0;
   out_4390300350310679035[273] = 0;
   out_4390300350310679035[274] = 0;
   out_4390300350310679035[275] = 0;
   out_4390300350310679035[276] = 0;
   out_4390300350310679035[277] = 0;
   out_4390300350310679035[278] = 0;
   out_4390300350310679035[279] = 0;
   out_4390300350310679035[280] = 0;
   out_4390300350310679035[281] = 0;
   out_4390300350310679035[282] = 0;
   out_4390300350310679035[283] = 0;
   out_4390300350310679035[284] = 0;
   out_4390300350310679035[285] = 1.0;
   out_4390300350310679035[286] = 0;
   out_4390300350310679035[287] = 0;
   out_4390300350310679035[288] = 0;
   out_4390300350310679035[289] = 0;
   out_4390300350310679035[290] = 0;
   out_4390300350310679035[291] = 0;
   out_4390300350310679035[292] = 0;
   out_4390300350310679035[293] = 0;
   out_4390300350310679035[294] = 0;
   out_4390300350310679035[295] = 0;
   out_4390300350310679035[296] = 0;
   out_4390300350310679035[297] = 0;
   out_4390300350310679035[298] = 0;
   out_4390300350310679035[299] = 0;
   out_4390300350310679035[300] = 0;
   out_4390300350310679035[301] = 0;
   out_4390300350310679035[302] = 0;
   out_4390300350310679035[303] = 0;
   out_4390300350310679035[304] = 0;
   out_4390300350310679035[305] = 0;
   out_4390300350310679035[306] = 0;
   out_4390300350310679035[307] = 1.0;
   out_4390300350310679035[308] = 0;
   out_4390300350310679035[309] = 0;
   out_4390300350310679035[310] = 0;
   out_4390300350310679035[311] = 0;
   out_4390300350310679035[312] = 0;
   out_4390300350310679035[313] = 0;
   out_4390300350310679035[314] = 0;
   out_4390300350310679035[315] = 0;
   out_4390300350310679035[316] = 0;
   out_4390300350310679035[317] = 0;
   out_4390300350310679035[318] = 0;
   out_4390300350310679035[319] = 0;
   out_4390300350310679035[320] = 0;
   out_4390300350310679035[321] = 0;
   out_4390300350310679035[322] = 0;
   out_4390300350310679035[323] = 0;
   out_4390300350310679035[324] = 0;
   out_4390300350310679035[325] = 0;
   out_4390300350310679035[326] = 0;
   out_4390300350310679035[327] = 0;
   out_4390300350310679035[328] = 0;
   out_4390300350310679035[329] = 1.0;
   out_4390300350310679035[330] = 0;
   out_4390300350310679035[331] = 0;
   out_4390300350310679035[332] = 0;
   out_4390300350310679035[333] = 0;
   out_4390300350310679035[334] = 0;
   out_4390300350310679035[335] = 0;
   out_4390300350310679035[336] = 0;
   out_4390300350310679035[337] = 0;
   out_4390300350310679035[338] = 0;
   out_4390300350310679035[339] = 0;
   out_4390300350310679035[340] = 0;
   out_4390300350310679035[341] = 0;
   out_4390300350310679035[342] = 0;
   out_4390300350310679035[343] = 0;
   out_4390300350310679035[344] = 0;
   out_4390300350310679035[345] = 0;
   out_4390300350310679035[346] = 0;
   out_4390300350310679035[347] = 0;
   out_4390300350310679035[348] = 0;
   out_4390300350310679035[349] = 0;
   out_4390300350310679035[350] = 0;
   out_4390300350310679035[351] = 1.0;
   out_4390300350310679035[352] = 0;
   out_4390300350310679035[353] = 0;
   out_4390300350310679035[354] = 0;
   out_4390300350310679035[355] = 0;
   out_4390300350310679035[356] = 0;
   out_4390300350310679035[357] = 0;
   out_4390300350310679035[358] = 0;
   out_4390300350310679035[359] = 0;
   out_4390300350310679035[360] = 0;
   out_4390300350310679035[361] = 0;
   out_4390300350310679035[362] = 0;
   out_4390300350310679035[363] = 0;
   out_4390300350310679035[364] = 0;
   out_4390300350310679035[365] = 0;
   out_4390300350310679035[366] = 0;
   out_4390300350310679035[367] = 0;
   out_4390300350310679035[368] = 0;
   out_4390300350310679035[369] = 0;
   out_4390300350310679035[370] = 0;
   out_4390300350310679035[371] = 0;
   out_4390300350310679035[372] = 0;
   out_4390300350310679035[373] = 1.0;
   out_4390300350310679035[374] = 0;
   out_4390300350310679035[375] = 0;
   out_4390300350310679035[376] = 0;
   out_4390300350310679035[377] = 0;
   out_4390300350310679035[378] = 0;
   out_4390300350310679035[379] = 0;
   out_4390300350310679035[380] = 0;
   out_4390300350310679035[381] = 0;
   out_4390300350310679035[382] = 0;
   out_4390300350310679035[383] = 0;
   out_4390300350310679035[384] = 0;
   out_4390300350310679035[385] = 0;
   out_4390300350310679035[386] = 0;
   out_4390300350310679035[387] = 0;
   out_4390300350310679035[388] = 0;
   out_4390300350310679035[389] = 0;
   out_4390300350310679035[390] = 0;
   out_4390300350310679035[391] = 0;
   out_4390300350310679035[392] = 0;
   out_4390300350310679035[393] = 0;
   out_4390300350310679035[394] = 0;
   out_4390300350310679035[395] = 1.0;
   out_4390300350310679035[396] = 0;
   out_4390300350310679035[397] = 0;
   out_4390300350310679035[398] = 0;
   out_4390300350310679035[399] = 0;
   out_4390300350310679035[400] = 0;
   out_4390300350310679035[401] = 0;
   out_4390300350310679035[402] = 0;
   out_4390300350310679035[403] = 0;
   out_4390300350310679035[404] = 0;
   out_4390300350310679035[405] = 0;
   out_4390300350310679035[406] = 0;
   out_4390300350310679035[407] = 0;
   out_4390300350310679035[408] = 0;
   out_4390300350310679035[409] = 0;
   out_4390300350310679035[410] = 0;
   out_4390300350310679035[411] = 0;
   out_4390300350310679035[412] = 0;
   out_4390300350310679035[413] = 0;
   out_4390300350310679035[414] = 0;
   out_4390300350310679035[415] = 0;
   out_4390300350310679035[416] = 0;
   out_4390300350310679035[417] = 1.0;
   out_4390300350310679035[418] = 0;
   out_4390300350310679035[419] = 0;
   out_4390300350310679035[420] = 0;
   out_4390300350310679035[421] = 0;
   out_4390300350310679035[422] = 0;
   out_4390300350310679035[423] = 0;
   out_4390300350310679035[424] = 0;
   out_4390300350310679035[425] = 0;
   out_4390300350310679035[426] = 0;
   out_4390300350310679035[427] = 0;
   out_4390300350310679035[428] = 0;
   out_4390300350310679035[429] = 0;
   out_4390300350310679035[430] = 0;
   out_4390300350310679035[431] = 0;
   out_4390300350310679035[432] = 0;
   out_4390300350310679035[433] = 0;
   out_4390300350310679035[434] = 0;
   out_4390300350310679035[435] = 0;
   out_4390300350310679035[436] = 0;
   out_4390300350310679035[437] = 0;
   out_4390300350310679035[438] = 0;
   out_4390300350310679035[439] = 1.0;
   out_4390300350310679035[440] = 0;
   out_4390300350310679035[441] = 0;
   out_4390300350310679035[442] = 0;
   out_4390300350310679035[443] = 0;
   out_4390300350310679035[444] = 0;
   out_4390300350310679035[445] = 0;
   out_4390300350310679035[446] = 0;
   out_4390300350310679035[447] = 0;
   out_4390300350310679035[448] = 0;
   out_4390300350310679035[449] = 0;
   out_4390300350310679035[450] = 0;
   out_4390300350310679035[451] = 0;
   out_4390300350310679035[452] = 0;
   out_4390300350310679035[453] = 0;
   out_4390300350310679035[454] = 0;
   out_4390300350310679035[455] = 0;
   out_4390300350310679035[456] = 0;
   out_4390300350310679035[457] = 0;
   out_4390300350310679035[458] = 0;
   out_4390300350310679035[459] = 0;
   out_4390300350310679035[460] = 0;
   out_4390300350310679035[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8268551332720580037) {
   out_8268551332720580037[0] = dt*state[7] + state[0];
   out_8268551332720580037[1] = dt*state[8] + state[1];
   out_8268551332720580037[2] = dt*state[9] + state[2];
   out_8268551332720580037[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8268551332720580037[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8268551332720580037[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8268551332720580037[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8268551332720580037[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8268551332720580037[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8268551332720580037[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8268551332720580037[10] = state[10];
   out_8268551332720580037[11] = state[11];
   out_8268551332720580037[12] = state[12];
   out_8268551332720580037[13] = state[13];
   out_8268551332720580037[14] = state[14];
   out_8268551332720580037[15] = state[15];
   out_8268551332720580037[16] = state[16];
   out_8268551332720580037[17] = state[17];
   out_8268551332720580037[18] = state[18];
   out_8268551332720580037[19] = state[19];
   out_8268551332720580037[20] = state[20];
   out_8268551332720580037[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1164008229608083872) {
   out_1164008229608083872[0] = 1;
   out_1164008229608083872[1] = 0;
   out_1164008229608083872[2] = 0;
   out_1164008229608083872[3] = 0;
   out_1164008229608083872[4] = 0;
   out_1164008229608083872[5] = 0;
   out_1164008229608083872[6] = dt;
   out_1164008229608083872[7] = 0;
   out_1164008229608083872[8] = 0;
   out_1164008229608083872[9] = 0;
   out_1164008229608083872[10] = 0;
   out_1164008229608083872[11] = 0;
   out_1164008229608083872[12] = 0;
   out_1164008229608083872[13] = 0;
   out_1164008229608083872[14] = 0;
   out_1164008229608083872[15] = 0;
   out_1164008229608083872[16] = 0;
   out_1164008229608083872[17] = 0;
   out_1164008229608083872[18] = 0;
   out_1164008229608083872[19] = 0;
   out_1164008229608083872[20] = 0;
   out_1164008229608083872[21] = 0;
   out_1164008229608083872[22] = 1;
   out_1164008229608083872[23] = 0;
   out_1164008229608083872[24] = 0;
   out_1164008229608083872[25] = 0;
   out_1164008229608083872[26] = 0;
   out_1164008229608083872[27] = 0;
   out_1164008229608083872[28] = dt;
   out_1164008229608083872[29] = 0;
   out_1164008229608083872[30] = 0;
   out_1164008229608083872[31] = 0;
   out_1164008229608083872[32] = 0;
   out_1164008229608083872[33] = 0;
   out_1164008229608083872[34] = 0;
   out_1164008229608083872[35] = 0;
   out_1164008229608083872[36] = 0;
   out_1164008229608083872[37] = 0;
   out_1164008229608083872[38] = 0;
   out_1164008229608083872[39] = 0;
   out_1164008229608083872[40] = 0;
   out_1164008229608083872[41] = 0;
   out_1164008229608083872[42] = 0;
   out_1164008229608083872[43] = 0;
   out_1164008229608083872[44] = 1;
   out_1164008229608083872[45] = 0;
   out_1164008229608083872[46] = 0;
   out_1164008229608083872[47] = 0;
   out_1164008229608083872[48] = 0;
   out_1164008229608083872[49] = 0;
   out_1164008229608083872[50] = dt;
   out_1164008229608083872[51] = 0;
   out_1164008229608083872[52] = 0;
   out_1164008229608083872[53] = 0;
   out_1164008229608083872[54] = 0;
   out_1164008229608083872[55] = 0;
   out_1164008229608083872[56] = 0;
   out_1164008229608083872[57] = 0;
   out_1164008229608083872[58] = 0;
   out_1164008229608083872[59] = 0;
   out_1164008229608083872[60] = 0;
   out_1164008229608083872[61] = 0;
   out_1164008229608083872[62] = 0;
   out_1164008229608083872[63] = 0;
   out_1164008229608083872[64] = 0;
   out_1164008229608083872[65] = 0;
   out_1164008229608083872[66] = 1;
   out_1164008229608083872[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1164008229608083872[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1164008229608083872[69] = 0;
   out_1164008229608083872[70] = 0;
   out_1164008229608083872[71] = 0;
   out_1164008229608083872[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1164008229608083872[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1164008229608083872[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1164008229608083872[75] = 0;
   out_1164008229608083872[76] = 0;
   out_1164008229608083872[77] = 0;
   out_1164008229608083872[78] = 0;
   out_1164008229608083872[79] = 0;
   out_1164008229608083872[80] = 0;
   out_1164008229608083872[81] = 0;
   out_1164008229608083872[82] = 0;
   out_1164008229608083872[83] = 0;
   out_1164008229608083872[84] = 0;
   out_1164008229608083872[85] = 0;
   out_1164008229608083872[86] = 0;
   out_1164008229608083872[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1164008229608083872[88] = 1;
   out_1164008229608083872[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1164008229608083872[90] = 0;
   out_1164008229608083872[91] = 0;
   out_1164008229608083872[92] = 0;
   out_1164008229608083872[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1164008229608083872[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1164008229608083872[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1164008229608083872[96] = 0;
   out_1164008229608083872[97] = 0;
   out_1164008229608083872[98] = 0;
   out_1164008229608083872[99] = 0;
   out_1164008229608083872[100] = 0;
   out_1164008229608083872[101] = 0;
   out_1164008229608083872[102] = 0;
   out_1164008229608083872[103] = 0;
   out_1164008229608083872[104] = 0;
   out_1164008229608083872[105] = 0;
   out_1164008229608083872[106] = 0;
   out_1164008229608083872[107] = 0;
   out_1164008229608083872[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1164008229608083872[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1164008229608083872[110] = 1;
   out_1164008229608083872[111] = 0;
   out_1164008229608083872[112] = 0;
   out_1164008229608083872[113] = 0;
   out_1164008229608083872[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1164008229608083872[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1164008229608083872[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1164008229608083872[117] = 0;
   out_1164008229608083872[118] = 0;
   out_1164008229608083872[119] = 0;
   out_1164008229608083872[120] = 0;
   out_1164008229608083872[121] = 0;
   out_1164008229608083872[122] = 0;
   out_1164008229608083872[123] = 0;
   out_1164008229608083872[124] = 0;
   out_1164008229608083872[125] = 0;
   out_1164008229608083872[126] = 0;
   out_1164008229608083872[127] = 0;
   out_1164008229608083872[128] = 0;
   out_1164008229608083872[129] = 0;
   out_1164008229608083872[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1164008229608083872[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1164008229608083872[132] = 1;
   out_1164008229608083872[133] = 0;
   out_1164008229608083872[134] = 0;
   out_1164008229608083872[135] = 0;
   out_1164008229608083872[136] = 0;
   out_1164008229608083872[137] = 0;
   out_1164008229608083872[138] = 0;
   out_1164008229608083872[139] = 0;
   out_1164008229608083872[140] = 0;
   out_1164008229608083872[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1164008229608083872[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1164008229608083872[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1164008229608083872[144] = 0;
   out_1164008229608083872[145] = 0;
   out_1164008229608083872[146] = 0;
   out_1164008229608083872[147] = 0;
   out_1164008229608083872[148] = 0;
   out_1164008229608083872[149] = 0;
   out_1164008229608083872[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1164008229608083872[151] = 0;
   out_1164008229608083872[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1164008229608083872[153] = 0;
   out_1164008229608083872[154] = 1;
   out_1164008229608083872[155] = 0;
   out_1164008229608083872[156] = 0;
   out_1164008229608083872[157] = 0;
   out_1164008229608083872[158] = 0;
   out_1164008229608083872[159] = 0;
   out_1164008229608083872[160] = 0;
   out_1164008229608083872[161] = 0;
   out_1164008229608083872[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1164008229608083872[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1164008229608083872[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1164008229608083872[165] = 0;
   out_1164008229608083872[166] = 0;
   out_1164008229608083872[167] = 0;
   out_1164008229608083872[168] = 0;
   out_1164008229608083872[169] = 0;
   out_1164008229608083872[170] = 0;
   out_1164008229608083872[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1164008229608083872[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1164008229608083872[173] = 0;
   out_1164008229608083872[174] = 0;
   out_1164008229608083872[175] = 0;
   out_1164008229608083872[176] = 1;
   out_1164008229608083872[177] = 0;
   out_1164008229608083872[178] = 0;
   out_1164008229608083872[179] = 0;
   out_1164008229608083872[180] = 0;
   out_1164008229608083872[181] = 0;
   out_1164008229608083872[182] = 0;
   out_1164008229608083872[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1164008229608083872[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1164008229608083872[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1164008229608083872[186] = 0;
   out_1164008229608083872[187] = 0;
   out_1164008229608083872[188] = 0;
   out_1164008229608083872[189] = 0;
   out_1164008229608083872[190] = 0;
   out_1164008229608083872[191] = 0;
   out_1164008229608083872[192] = 0;
   out_1164008229608083872[193] = 0;
   out_1164008229608083872[194] = 0;
   out_1164008229608083872[195] = 0;
   out_1164008229608083872[196] = 0;
   out_1164008229608083872[197] = 0;
   out_1164008229608083872[198] = 1;
   out_1164008229608083872[199] = 0;
   out_1164008229608083872[200] = 0;
   out_1164008229608083872[201] = 0;
   out_1164008229608083872[202] = 0;
   out_1164008229608083872[203] = 0;
   out_1164008229608083872[204] = 0;
   out_1164008229608083872[205] = 0;
   out_1164008229608083872[206] = 0;
   out_1164008229608083872[207] = 0;
   out_1164008229608083872[208] = 0;
   out_1164008229608083872[209] = 0;
   out_1164008229608083872[210] = 0;
   out_1164008229608083872[211] = 0;
   out_1164008229608083872[212] = 0;
   out_1164008229608083872[213] = 0;
   out_1164008229608083872[214] = 0;
   out_1164008229608083872[215] = 0;
   out_1164008229608083872[216] = 0;
   out_1164008229608083872[217] = 0;
   out_1164008229608083872[218] = 0;
   out_1164008229608083872[219] = 0;
   out_1164008229608083872[220] = 1;
   out_1164008229608083872[221] = 0;
   out_1164008229608083872[222] = 0;
   out_1164008229608083872[223] = 0;
   out_1164008229608083872[224] = 0;
   out_1164008229608083872[225] = 0;
   out_1164008229608083872[226] = 0;
   out_1164008229608083872[227] = 0;
   out_1164008229608083872[228] = 0;
   out_1164008229608083872[229] = 0;
   out_1164008229608083872[230] = 0;
   out_1164008229608083872[231] = 0;
   out_1164008229608083872[232] = 0;
   out_1164008229608083872[233] = 0;
   out_1164008229608083872[234] = 0;
   out_1164008229608083872[235] = 0;
   out_1164008229608083872[236] = 0;
   out_1164008229608083872[237] = 0;
   out_1164008229608083872[238] = 0;
   out_1164008229608083872[239] = 0;
   out_1164008229608083872[240] = 0;
   out_1164008229608083872[241] = 0;
   out_1164008229608083872[242] = 1;
   out_1164008229608083872[243] = 0;
   out_1164008229608083872[244] = 0;
   out_1164008229608083872[245] = 0;
   out_1164008229608083872[246] = 0;
   out_1164008229608083872[247] = 0;
   out_1164008229608083872[248] = 0;
   out_1164008229608083872[249] = 0;
   out_1164008229608083872[250] = 0;
   out_1164008229608083872[251] = 0;
   out_1164008229608083872[252] = 0;
   out_1164008229608083872[253] = 0;
   out_1164008229608083872[254] = 0;
   out_1164008229608083872[255] = 0;
   out_1164008229608083872[256] = 0;
   out_1164008229608083872[257] = 0;
   out_1164008229608083872[258] = 0;
   out_1164008229608083872[259] = 0;
   out_1164008229608083872[260] = 0;
   out_1164008229608083872[261] = 0;
   out_1164008229608083872[262] = 0;
   out_1164008229608083872[263] = 0;
   out_1164008229608083872[264] = 1;
   out_1164008229608083872[265] = 0;
   out_1164008229608083872[266] = 0;
   out_1164008229608083872[267] = 0;
   out_1164008229608083872[268] = 0;
   out_1164008229608083872[269] = 0;
   out_1164008229608083872[270] = 0;
   out_1164008229608083872[271] = 0;
   out_1164008229608083872[272] = 0;
   out_1164008229608083872[273] = 0;
   out_1164008229608083872[274] = 0;
   out_1164008229608083872[275] = 0;
   out_1164008229608083872[276] = 0;
   out_1164008229608083872[277] = 0;
   out_1164008229608083872[278] = 0;
   out_1164008229608083872[279] = 0;
   out_1164008229608083872[280] = 0;
   out_1164008229608083872[281] = 0;
   out_1164008229608083872[282] = 0;
   out_1164008229608083872[283] = 0;
   out_1164008229608083872[284] = 0;
   out_1164008229608083872[285] = 0;
   out_1164008229608083872[286] = 1;
   out_1164008229608083872[287] = 0;
   out_1164008229608083872[288] = 0;
   out_1164008229608083872[289] = 0;
   out_1164008229608083872[290] = 0;
   out_1164008229608083872[291] = 0;
   out_1164008229608083872[292] = 0;
   out_1164008229608083872[293] = 0;
   out_1164008229608083872[294] = 0;
   out_1164008229608083872[295] = 0;
   out_1164008229608083872[296] = 0;
   out_1164008229608083872[297] = 0;
   out_1164008229608083872[298] = 0;
   out_1164008229608083872[299] = 0;
   out_1164008229608083872[300] = 0;
   out_1164008229608083872[301] = 0;
   out_1164008229608083872[302] = 0;
   out_1164008229608083872[303] = 0;
   out_1164008229608083872[304] = 0;
   out_1164008229608083872[305] = 0;
   out_1164008229608083872[306] = 0;
   out_1164008229608083872[307] = 0;
   out_1164008229608083872[308] = 1;
   out_1164008229608083872[309] = 0;
   out_1164008229608083872[310] = 0;
   out_1164008229608083872[311] = 0;
   out_1164008229608083872[312] = 0;
   out_1164008229608083872[313] = 0;
   out_1164008229608083872[314] = 0;
   out_1164008229608083872[315] = 0;
   out_1164008229608083872[316] = 0;
   out_1164008229608083872[317] = 0;
   out_1164008229608083872[318] = 0;
   out_1164008229608083872[319] = 0;
   out_1164008229608083872[320] = 0;
   out_1164008229608083872[321] = 0;
   out_1164008229608083872[322] = 0;
   out_1164008229608083872[323] = 0;
   out_1164008229608083872[324] = 0;
   out_1164008229608083872[325] = 0;
   out_1164008229608083872[326] = 0;
   out_1164008229608083872[327] = 0;
   out_1164008229608083872[328] = 0;
   out_1164008229608083872[329] = 0;
   out_1164008229608083872[330] = 1;
   out_1164008229608083872[331] = 0;
   out_1164008229608083872[332] = 0;
   out_1164008229608083872[333] = 0;
   out_1164008229608083872[334] = 0;
   out_1164008229608083872[335] = 0;
   out_1164008229608083872[336] = 0;
   out_1164008229608083872[337] = 0;
   out_1164008229608083872[338] = 0;
   out_1164008229608083872[339] = 0;
   out_1164008229608083872[340] = 0;
   out_1164008229608083872[341] = 0;
   out_1164008229608083872[342] = 0;
   out_1164008229608083872[343] = 0;
   out_1164008229608083872[344] = 0;
   out_1164008229608083872[345] = 0;
   out_1164008229608083872[346] = 0;
   out_1164008229608083872[347] = 0;
   out_1164008229608083872[348] = 0;
   out_1164008229608083872[349] = 0;
   out_1164008229608083872[350] = 0;
   out_1164008229608083872[351] = 0;
   out_1164008229608083872[352] = 1;
   out_1164008229608083872[353] = 0;
   out_1164008229608083872[354] = 0;
   out_1164008229608083872[355] = 0;
   out_1164008229608083872[356] = 0;
   out_1164008229608083872[357] = 0;
   out_1164008229608083872[358] = 0;
   out_1164008229608083872[359] = 0;
   out_1164008229608083872[360] = 0;
   out_1164008229608083872[361] = 0;
   out_1164008229608083872[362] = 0;
   out_1164008229608083872[363] = 0;
   out_1164008229608083872[364] = 0;
   out_1164008229608083872[365] = 0;
   out_1164008229608083872[366] = 0;
   out_1164008229608083872[367] = 0;
   out_1164008229608083872[368] = 0;
   out_1164008229608083872[369] = 0;
   out_1164008229608083872[370] = 0;
   out_1164008229608083872[371] = 0;
   out_1164008229608083872[372] = 0;
   out_1164008229608083872[373] = 0;
   out_1164008229608083872[374] = 1;
   out_1164008229608083872[375] = 0;
   out_1164008229608083872[376] = 0;
   out_1164008229608083872[377] = 0;
   out_1164008229608083872[378] = 0;
   out_1164008229608083872[379] = 0;
   out_1164008229608083872[380] = 0;
   out_1164008229608083872[381] = 0;
   out_1164008229608083872[382] = 0;
   out_1164008229608083872[383] = 0;
   out_1164008229608083872[384] = 0;
   out_1164008229608083872[385] = 0;
   out_1164008229608083872[386] = 0;
   out_1164008229608083872[387] = 0;
   out_1164008229608083872[388] = 0;
   out_1164008229608083872[389] = 0;
   out_1164008229608083872[390] = 0;
   out_1164008229608083872[391] = 0;
   out_1164008229608083872[392] = 0;
   out_1164008229608083872[393] = 0;
   out_1164008229608083872[394] = 0;
   out_1164008229608083872[395] = 0;
   out_1164008229608083872[396] = 1;
   out_1164008229608083872[397] = 0;
   out_1164008229608083872[398] = 0;
   out_1164008229608083872[399] = 0;
   out_1164008229608083872[400] = 0;
   out_1164008229608083872[401] = 0;
   out_1164008229608083872[402] = 0;
   out_1164008229608083872[403] = 0;
   out_1164008229608083872[404] = 0;
   out_1164008229608083872[405] = 0;
   out_1164008229608083872[406] = 0;
   out_1164008229608083872[407] = 0;
   out_1164008229608083872[408] = 0;
   out_1164008229608083872[409] = 0;
   out_1164008229608083872[410] = 0;
   out_1164008229608083872[411] = 0;
   out_1164008229608083872[412] = 0;
   out_1164008229608083872[413] = 0;
   out_1164008229608083872[414] = 0;
   out_1164008229608083872[415] = 0;
   out_1164008229608083872[416] = 0;
   out_1164008229608083872[417] = 0;
   out_1164008229608083872[418] = 1;
   out_1164008229608083872[419] = 0;
   out_1164008229608083872[420] = 0;
   out_1164008229608083872[421] = 0;
   out_1164008229608083872[422] = 0;
   out_1164008229608083872[423] = 0;
   out_1164008229608083872[424] = 0;
   out_1164008229608083872[425] = 0;
   out_1164008229608083872[426] = 0;
   out_1164008229608083872[427] = 0;
   out_1164008229608083872[428] = 0;
   out_1164008229608083872[429] = 0;
   out_1164008229608083872[430] = 0;
   out_1164008229608083872[431] = 0;
   out_1164008229608083872[432] = 0;
   out_1164008229608083872[433] = 0;
   out_1164008229608083872[434] = 0;
   out_1164008229608083872[435] = 0;
   out_1164008229608083872[436] = 0;
   out_1164008229608083872[437] = 0;
   out_1164008229608083872[438] = 0;
   out_1164008229608083872[439] = 0;
   out_1164008229608083872[440] = 1;
}
void h_4(double *state, double *unused, double *out_2262361584068828184) {
   out_2262361584068828184[0] = state[10] + state[13];
   out_2262361584068828184[1] = state[11] + state[14];
   out_2262361584068828184[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8086601223300992224) {
   out_8086601223300992224[0] = 0;
   out_8086601223300992224[1] = 0;
   out_8086601223300992224[2] = 0;
   out_8086601223300992224[3] = 0;
   out_8086601223300992224[4] = 0;
   out_8086601223300992224[5] = 0;
   out_8086601223300992224[6] = 0;
   out_8086601223300992224[7] = 0;
   out_8086601223300992224[8] = 0;
   out_8086601223300992224[9] = 0;
   out_8086601223300992224[10] = 1;
   out_8086601223300992224[11] = 0;
   out_8086601223300992224[12] = 0;
   out_8086601223300992224[13] = 1;
   out_8086601223300992224[14] = 0;
   out_8086601223300992224[15] = 0;
   out_8086601223300992224[16] = 0;
   out_8086601223300992224[17] = 0;
   out_8086601223300992224[18] = 0;
   out_8086601223300992224[19] = 0;
   out_8086601223300992224[20] = 0;
   out_8086601223300992224[21] = 0;
   out_8086601223300992224[22] = 0;
   out_8086601223300992224[23] = 0;
   out_8086601223300992224[24] = 0;
   out_8086601223300992224[25] = 0;
   out_8086601223300992224[26] = 0;
   out_8086601223300992224[27] = 0;
   out_8086601223300992224[28] = 0;
   out_8086601223300992224[29] = 0;
   out_8086601223300992224[30] = 0;
   out_8086601223300992224[31] = 0;
   out_8086601223300992224[32] = 0;
   out_8086601223300992224[33] = 1;
   out_8086601223300992224[34] = 0;
   out_8086601223300992224[35] = 0;
   out_8086601223300992224[36] = 1;
   out_8086601223300992224[37] = 0;
   out_8086601223300992224[38] = 0;
   out_8086601223300992224[39] = 0;
   out_8086601223300992224[40] = 0;
   out_8086601223300992224[41] = 0;
   out_8086601223300992224[42] = 0;
   out_8086601223300992224[43] = 0;
   out_8086601223300992224[44] = 0;
   out_8086601223300992224[45] = 0;
   out_8086601223300992224[46] = 0;
   out_8086601223300992224[47] = 0;
   out_8086601223300992224[48] = 0;
   out_8086601223300992224[49] = 0;
   out_8086601223300992224[50] = 0;
   out_8086601223300992224[51] = 0;
   out_8086601223300992224[52] = 0;
   out_8086601223300992224[53] = 0;
   out_8086601223300992224[54] = 0;
   out_8086601223300992224[55] = 0;
   out_8086601223300992224[56] = 1;
   out_8086601223300992224[57] = 0;
   out_8086601223300992224[58] = 0;
   out_8086601223300992224[59] = 1;
   out_8086601223300992224[60] = 0;
   out_8086601223300992224[61] = 0;
   out_8086601223300992224[62] = 0;
   out_8086601223300992224[63] = 0;
   out_8086601223300992224[64] = 0;
   out_8086601223300992224[65] = 0;
}
void h_9(double *state, double *unused, double *out_4303923515652599437) {
   out_4303923515652599437[0] = state[10];
   out_4303923515652599437[1] = state[11];
   out_4303923515652599437[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7845411576671401579) {
   out_7845411576671401579[0] = 0;
   out_7845411576671401579[1] = 0;
   out_7845411576671401579[2] = 0;
   out_7845411576671401579[3] = 0;
   out_7845411576671401579[4] = 0;
   out_7845411576671401579[5] = 0;
   out_7845411576671401579[6] = 0;
   out_7845411576671401579[7] = 0;
   out_7845411576671401579[8] = 0;
   out_7845411576671401579[9] = 0;
   out_7845411576671401579[10] = 1;
   out_7845411576671401579[11] = 0;
   out_7845411576671401579[12] = 0;
   out_7845411576671401579[13] = 0;
   out_7845411576671401579[14] = 0;
   out_7845411576671401579[15] = 0;
   out_7845411576671401579[16] = 0;
   out_7845411576671401579[17] = 0;
   out_7845411576671401579[18] = 0;
   out_7845411576671401579[19] = 0;
   out_7845411576671401579[20] = 0;
   out_7845411576671401579[21] = 0;
   out_7845411576671401579[22] = 0;
   out_7845411576671401579[23] = 0;
   out_7845411576671401579[24] = 0;
   out_7845411576671401579[25] = 0;
   out_7845411576671401579[26] = 0;
   out_7845411576671401579[27] = 0;
   out_7845411576671401579[28] = 0;
   out_7845411576671401579[29] = 0;
   out_7845411576671401579[30] = 0;
   out_7845411576671401579[31] = 0;
   out_7845411576671401579[32] = 0;
   out_7845411576671401579[33] = 1;
   out_7845411576671401579[34] = 0;
   out_7845411576671401579[35] = 0;
   out_7845411576671401579[36] = 0;
   out_7845411576671401579[37] = 0;
   out_7845411576671401579[38] = 0;
   out_7845411576671401579[39] = 0;
   out_7845411576671401579[40] = 0;
   out_7845411576671401579[41] = 0;
   out_7845411576671401579[42] = 0;
   out_7845411576671401579[43] = 0;
   out_7845411576671401579[44] = 0;
   out_7845411576671401579[45] = 0;
   out_7845411576671401579[46] = 0;
   out_7845411576671401579[47] = 0;
   out_7845411576671401579[48] = 0;
   out_7845411576671401579[49] = 0;
   out_7845411576671401579[50] = 0;
   out_7845411576671401579[51] = 0;
   out_7845411576671401579[52] = 0;
   out_7845411576671401579[53] = 0;
   out_7845411576671401579[54] = 0;
   out_7845411576671401579[55] = 0;
   out_7845411576671401579[56] = 1;
   out_7845411576671401579[57] = 0;
   out_7845411576671401579[58] = 0;
   out_7845411576671401579[59] = 0;
   out_7845411576671401579[60] = 0;
   out_7845411576671401579[61] = 0;
   out_7845411576671401579[62] = 0;
   out_7845411576671401579[63] = 0;
   out_7845411576671401579[64] = 0;
   out_7845411576671401579[65] = 0;
}
void h_10(double *state, double *unused, double *out_3990839466442438769) {
   out_3990839466442438769[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3990839466442438769[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3990839466442438769[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6460755846635292532) {
   out_6460755846635292532[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6460755846635292532[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6460755846635292532[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6460755846635292532[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6460755846635292532[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6460755846635292532[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6460755846635292532[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6460755846635292532[7] = 0;
   out_6460755846635292532[8] = 0;
   out_6460755846635292532[9] = 0;
   out_6460755846635292532[10] = 0;
   out_6460755846635292532[11] = 0;
   out_6460755846635292532[12] = 0;
   out_6460755846635292532[13] = 0;
   out_6460755846635292532[14] = 0;
   out_6460755846635292532[15] = 0;
   out_6460755846635292532[16] = 1;
   out_6460755846635292532[17] = 0;
   out_6460755846635292532[18] = 0;
   out_6460755846635292532[19] = 1;
   out_6460755846635292532[20] = 0;
   out_6460755846635292532[21] = 0;
   out_6460755846635292532[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6460755846635292532[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6460755846635292532[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6460755846635292532[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6460755846635292532[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6460755846635292532[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6460755846635292532[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6460755846635292532[29] = 0;
   out_6460755846635292532[30] = 0;
   out_6460755846635292532[31] = 0;
   out_6460755846635292532[32] = 0;
   out_6460755846635292532[33] = 0;
   out_6460755846635292532[34] = 0;
   out_6460755846635292532[35] = 0;
   out_6460755846635292532[36] = 0;
   out_6460755846635292532[37] = 0;
   out_6460755846635292532[38] = 0;
   out_6460755846635292532[39] = 1;
   out_6460755846635292532[40] = 0;
   out_6460755846635292532[41] = 0;
   out_6460755846635292532[42] = 1;
   out_6460755846635292532[43] = 0;
   out_6460755846635292532[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6460755846635292532[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6460755846635292532[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6460755846635292532[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6460755846635292532[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6460755846635292532[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6460755846635292532[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6460755846635292532[51] = 0;
   out_6460755846635292532[52] = 0;
   out_6460755846635292532[53] = 0;
   out_6460755846635292532[54] = 0;
   out_6460755846635292532[55] = 0;
   out_6460755846635292532[56] = 0;
   out_6460755846635292532[57] = 0;
   out_6460755846635292532[58] = 0;
   out_6460755846635292532[59] = 0;
   out_6460755846635292532[60] = 0;
   out_6460755846635292532[61] = 0;
   out_6460755846635292532[62] = 1;
   out_6460755846635292532[63] = 0;
   out_6460755846635292532[64] = 0;
   out_6460755846635292532[65] = 1;
}
void h_12(double *state, double *unused, double *out_8824834610017378240) {
   out_8824834610017378240[0] = state[0];
   out_8824834610017378240[1] = state[1];
   out_8824834610017378240[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3067144815269030429) {
   out_3067144815269030429[0] = 1;
   out_3067144815269030429[1] = 0;
   out_3067144815269030429[2] = 0;
   out_3067144815269030429[3] = 0;
   out_3067144815269030429[4] = 0;
   out_3067144815269030429[5] = 0;
   out_3067144815269030429[6] = 0;
   out_3067144815269030429[7] = 0;
   out_3067144815269030429[8] = 0;
   out_3067144815269030429[9] = 0;
   out_3067144815269030429[10] = 0;
   out_3067144815269030429[11] = 0;
   out_3067144815269030429[12] = 0;
   out_3067144815269030429[13] = 0;
   out_3067144815269030429[14] = 0;
   out_3067144815269030429[15] = 0;
   out_3067144815269030429[16] = 0;
   out_3067144815269030429[17] = 0;
   out_3067144815269030429[18] = 0;
   out_3067144815269030429[19] = 0;
   out_3067144815269030429[20] = 0;
   out_3067144815269030429[21] = 0;
   out_3067144815269030429[22] = 0;
   out_3067144815269030429[23] = 1;
   out_3067144815269030429[24] = 0;
   out_3067144815269030429[25] = 0;
   out_3067144815269030429[26] = 0;
   out_3067144815269030429[27] = 0;
   out_3067144815269030429[28] = 0;
   out_3067144815269030429[29] = 0;
   out_3067144815269030429[30] = 0;
   out_3067144815269030429[31] = 0;
   out_3067144815269030429[32] = 0;
   out_3067144815269030429[33] = 0;
   out_3067144815269030429[34] = 0;
   out_3067144815269030429[35] = 0;
   out_3067144815269030429[36] = 0;
   out_3067144815269030429[37] = 0;
   out_3067144815269030429[38] = 0;
   out_3067144815269030429[39] = 0;
   out_3067144815269030429[40] = 0;
   out_3067144815269030429[41] = 0;
   out_3067144815269030429[42] = 0;
   out_3067144815269030429[43] = 0;
   out_3067144815269030429[44] = 0;
   out_3067144815269030429[45] = 0;
   out_3067144815269030429[46] = 1;
   out_3067144815269030429[47] = 0;
   out_3067144815269030429[48] = 0;
   out_3067144815269030429[49] = 0;
   out_3067144815269030429[50] = 0;
   out_3067144815269030429[51] = 0;
   out_3067144815269030429[52] = 0;
   out_3067144815269030429[53] = 0;
   out_3067144815269030429[54] = 0;
   out_3067144815269030429[55] = 0;
   out_3067144815269030429[56] = 0;
   out_3067144815269030429[57] = 0;
   out_3067144815269030429[58] = 0;
   out_3067144815269030429[59] = 0;
   out_3067144815269030429[60] = 0;
   out_3067144815269030429[61] = 0;
   out_3067144815269030429[62] = 0;
   out_3067144815269030429[63] = 0;
   out_3067144815269030429[64] = 0;
   out_3067144815269030429[65] = 0;
}
void h_35(double *state, double *unused, double *out_3004299637425634318) {
   out_3004299637425634318[0] = state[7];
   out_3004299637425634318[1] = state[8];
   out_3004299637425634318[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4719939165928384848) {
   out_4719939165928384848[0] = 0;
   out_4719939165928384848[1] = 0;
   out_4719939165928384848[2] = 0;
   out_4719939165928384848[3] = 0;
   out_4719939165928384848[4] = 0;
   out_4719939165928384848[5] = 0;
   out_4719939165928384848[6] = 0;
   out_4719939165928384848[7] = 1;
   out_4719939165928384848[8] = 0;
   out_4719939165928384848[9] = 0;
   out_4719939165928384848[10] = 0;
   out_4719939165928384848[11] = 0;
   out_4719939165928384848[12] = 0;
   out_4719939165928384848[13] = 0;
   out_4719939165928384848[14] = 0;
   out_4719939165928384848[15] = 0;
   out_4719939165928384848[16] = 0;
   out_4719939165928384848[17] = 0;
   out_4719939165928384848[18] = 0;
   out_4719939165928384848[19] = 0;
   out_4719939165928384848[20] = 0;
   out_4719939165928384848[21] = 0;
   out_4719939165928384848[22] = 0;
   out_4719939165928384848[23] = 0;
   out_4719939165928384848[24] = 0;
   out_4719939165928384848[25] = 0;
   out_4719939165928384848[26] = 0;
   out_4719939165928384848[27] = 0;
   out_4719939165928384848[28] = 0;
   out_4719939165928384848[29] = 0;
   out_4719939165928384848[30] = 1;
   out_4719939165928384848[31] = 0;
   out_4719939165928384848[32] = 0;
   out_4719939165928384848[33] = 0;
   out_4719939165928384848[34] = 0;
   out_4719939165928384848[35] = 0;
   out_4719939165928384848[36] = 0;
   out_4719939165928384848[37] = 0;
   out_4719939165928384848[38] = 0;
   out_4719939165928384848[39] = 0;
   out_4719939165928384848[40] = 0;
   out_4719939165928384848[41] = 0;
   out_4719939165928384848[42] = 0;
   out_4719939165928384848[43] = 0;
   out_4719939165928384848[44] = 0;
   out_4719939165928384848[45] = 0;
   out_4719939165928384848[46] = 0;
   out_4719939165928384848[47] = 0;
   out_4719939165928384848[48] = 0;
   out_4719939165928384848[49] = 0;
   out_4719939165928384848[50] = 0;
   out_4719939165928384848[51] = 0;
   out_4719939165928384848[52] = 0;
   out_4719939165928384848[53] = 1;
   out_4719939165928384848[54] = 0;
   out_4719939165928384848[55] = 0;
   out_4719939165928384848[56] = 0;
   out_4719939165928384848[57] = 0;
   out_4719939165928384848[58] = 0;
   out_4719939165928384848[59] = 0;
   out_4719939165928384848[60] = 0;
   out_4719939165928384848[61] = 0;
   out_4719939165928384848[62] = 0;
   out_4719939165928384848[63] = 0;
   out_4719939165928384848[64] = 0;
   out_4719939165928384848[65] = 0;
}
void h_32(double *state, double *unused, double *out_8458500521587119713) {
   out_8458500521587119713[0] = state[3];
   out_8458500521587119713[1] = state[4];
   out_8458500521587119713[2] = state[5];
   out_8458500521587119713[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6364778675639284450) {
   out_6364778675639284450[0] = 0;
   out_6364778675639284450[1] = 0;
   out_6364778675639284450[2] = 0;
   out_6364778675639284450[3] = 1;
   out_6364778675639284450[4] = 0;
   out_6364778675639284450[5] = 0;
   out_6364778675639284450[6] = 0;
   out_6364778675639284450[7] = 0;
   out_6364778675639284450[8] = 0;
   out_6364778675639284450[9] = 0;
   out_6364778675639284450[10] = 0;
   out_6364778675639284450[11] = 0;
   out_6364778675639284450[12] = 0;
   out_6364778675639284450[13] = 0;
   out_6364778675639284450[14] = 0;
   out_6364778675639284450[15] = 0;
   out_6364778675639284450[16] = 0;
   out_6364778675639284450[17] = 0;
   out_6364778675639284450[18] = 0;
   out_6364778675639284450[19] = 0;
   out_6364778675639284450[20] = 0;
   out_6364778675639284450[21] = 0;
   out_6364778675639284450[22] = 0;
   out_6364778675639284450[23] = 0;
   out_6364778675639284450[24] = 0;
   out_6364778675639284450[25] = 0;
   out_6364778675639284450[26] = 1;
   out_6364778675639284450[27] = 0;
   out_6364778675639284450[28] = 0;
   out_6364778675639284450[29] = 0;
   out_6364778675639284450[30] = 0;
   out_6364778675639284450[31] = 0;
   out_6364778675639284450[32] = 0;
   out_6364778675639284450[33] = 0;
   out_6364778675639284450[34] = 0;
   out_6364778675639284450[35] = 0;
   out_6364778675639284450[36] = 0;
   out_6364778675639284450[37] = 0;
   out_6364778675639284450[38] = 0;
   out_6364778675639284450[39] = 0;
   out_6364778675639284450[40] = 0;
   out_6364778675639284450[41] = 0;
   out_6364778675639284450[42] = 0;
   out_6364778675639284450[43] = 0;
   out_6364778675639284450[44] = 0;
   out_6364778675639284450[45] = 0;
   out_6364778675639284450[46] = 0;
   out_6364778675639284450[47] = 0;
   out_6364778675639284450[48] = 0;
   out_6364778675639284450[49] = 1;
   out_6364778675639284450[50] = 0;
   out_6364778675639284450[51] = 0;
   out_6364778675639284450[52] = 0;
   out_6364778675639284450[53] = 0;
   out_6364778675639284450[54] = 0;
   out_6364778675639284450[55] = 0;
   out_6364778675639284450[56] = 0;
   out_6364778675639284450[57] = 0;
   out_6364778675639284450[58] = 0;
   out_6364778675639284450[59] = 0;
   out_6364778675639284450[60] = 0;
   out_6364778675639284450[61] = 0;
   out_6364778675639284450[62] = 0;
   out_6364778675639284450[63] = 0;
   out_6364778675639284450[64] = 0;
   out_6364778675639284450[65] = 0;
   out_6364778675639284450[66] = 0;
   out_6364778675639284450[67] = 0;
   out_6364778675639284450[68] = 0;
   out_6364778675639284450[69] = 0;
   out_6364778675639284450[70] = 0;
   out_6364778675639284450[71] = 0;
   out_6364778675639284450[72] = 1;
   out_6364778675639284450[73] = 0;
   out_6364778675639284450[74] = 0;
   out_6364778675639284450[75] = 0;
   out_6364778675639284450[76] = 0;
   out_6364778675639284450[77] = 0;
   out_6364778675639284450[78] = 0;
   out_6364778675639284450[79] = 0;
   out_6364778675639284450[80] = 0;
   out_6364778675639284450[81] = 0;
   out_6364778675639284450[82] = 0;
   out_6364778675639284450[83] = 0;
   out_6364778675639284450[84] = 0;
   out_6364778675639284450[85] = 0;
   out_6364778675639284450[86] = 0;
   out_6364778675639284450[87] = 0;
}
void h_13(double *state, double *unused, double *out_241671530149260146) {
   out_241671530149260146[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_241671530149260146[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_241671530149260146[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2100740473575830672) {
   out_2100740473575830672[0] = 0;
   out_2100740473575830672[1] = 0;
   out_2100740473575830672[2] = 0;
   out_2100740473575830672[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2100740473575830672[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2100740473575830672[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2100740473575830672[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2100740473575830672[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2100740473575830672[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2100740473575830672[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2100740473575830672[10] = 0;
   out_2100740473575830672[11] = 0;
   out_2100740473575830672[12] = 0;
   out_2100740473575830672[13] = 0;
   out_2100740473575830672[14] = 0;
   out_2100740473575830672[15] = 0;
   out_2100740473575830672[16] = 0;
   out_2100740473575830672[17] = 0;
   out_2100740473575830672[18] = 0;
   out_2100740473575830672[19] = 0;
   out_2100740473575830672[20] = 0;
   out_2100740473575830672[21] = 0;
   out_2100740473575830672[22] = 0;
   out_2100740473575830672[23] = 0;
   out_2100740473575830672[24] = 0;
   out_2100740473575830672[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2100740473575830672[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2100740473575830672[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2100740473575830672[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2100740473575830672[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2100740473575830672[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2100740473575830672[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2100740473575830672[32] = 0;
   out_2100740473575830672[33] = 0;
   out_2100740473575830672[34] = 0;
   out_2100740473575830672[35] = 0;
   out_2100740473575830672[36] = 0;
   out_2100740473575830672[37] = 0;
   out_2100740473575830672[38] = 0;
   out_2100740473575830672[39] = 0;
   out_2100740473575830672[40] = 0;
   out_2100740473575830672[41] = 0;
   out_2100740473575830672[42] = 0;
   out_2100740473575830672[43] = 0;
   out_2100740473575830672[44] = 0;
   out_2100740473575830672[45] = 0;
   out_2100740473575830672[46] = 0;
   out_2100740473575830672[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2100740473575830672[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2100740473575830672[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2100740473575830672[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2100740473575830672[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2100740473575830672[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2100740473575830672[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2100740473575830672[54] = 0;
   out_2100740473575830672[55] = 0;
   out_2100740473575830672[56] = 0;
   out_2100740473575830672[57] = 0;
   out_2100740473575830672[58] = 0;
   out_2100740473575830672[59] = 0;
   out_2100740473575830672[60] = 0;
   out_2100740473575830672[61] = 0;
   out_2100740473575830672[62] = 0;
   out_2100740473575830672[63] = 0;
   out_2100740473575830672[64] = 0;
   out_2100740473575830672[65] = 0;
}
void h_14(double *state, double *unused, double *out_4303923515652599437) {
   out_4303923515652599437[0] = state[10];
   out_4303923515652599437[1] = state[11];
   out_4303923515652599437[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7845411576671401579) {
   out_7845411576671401579[0] = 0;
   out_7845411576671401579[1] = 0;
   out_7845411576671401579[2] = 0;
   out_7845411576671401579[3] = 0;
   out_7845411576671401579[4] = 0;
   out_7845411576671401579[5] = 0;
   out_7845411576671401579[6] = 0;
   out_7845411576671401579[7] = 0;
   out_7845411576671401579[8] = 0;
   out_7845411576671401579[9] = 0;
   out_7845411576671401579[10] = 1;
   out_7845411576671401579[11] = 0;
   out_7845411576671401579[12] = 0;
   out_7845411576671401579[13] = 0;
   out_7845411576671401579[14] = 0;
   out_7845411576671401579[15] = 0;
   out_7845411576671401579[16] = 0;
   out_7845411576671401579[17] = 0;
   out_7845411576671401579[18] = 0;
   out_7845411576671401579[19] = 0;
   out_7845411576671401579[20] = 0;
   out_7845411576671401579[21] = 0;
   out_7845411576671401579[22] = 0;
   out_7845411576671401579[23] = 0;
   out_7845411576671401579[24] = 0;
   out_7845411576671401579[25] = 0;
   out_7845411576671401579[26] = 0;
   out_7845411576671401579[27] = 0;
   out_7845411576671401579[28] = 0;
   out_7845411576671401579[29] = 0;
   out_7845411576671401579[30] = 0;
   out_7845411576671401579[31] = 0;
   out_7845411576671401579[32] = 0;
   out_7845411576671401579[33] = 1;
   out_7845411576671401579[34] = 0;
   out_7845411576671401579[35] = 0;
   out_7845411576671401579[36] = 0;
   out_7845411576671401579[37] = 0;
   out_7845411576671401579[38] = 0;
   out_7845411576671401579[39] = 0;
   out_7845411576671401579[40] = 0;
   out_7845411576671401579[41] = 0;
   out_7845411576671401579[42] = 0;
   out_7845411576671401579[43] = 0;
   out_7845411576671401579[44] = 0;
   out_7845411576671401579[45] = 0;
   out_7845411576671401579[46] = 0;
   out_7845411576671401579[47] = 0;
   out_7845411576671401579[48] = 0;
   out_7845411576671401579[49] = 0;
   out_7845411576671401579[50] = 0;
   out_7845411576671401579[51] = 0;
   out_7845411576671401579[52] = 0;
   out_7845411576671401579[53] = 0;
   out_7845411576671401579[54] = 0;
   out_7845411576671401579[55] = 0;
   out_7845411576671401579[56] = 1;
   out_7845411576671401579[57] = 0;
   out_7845411576671401579[58] = 0;
   out_7845411576671401579[59] = 0;
   out_7845411576671401579[60] = 0;
   out_7845411576671401579[61] = 0;
   out_7845411576671401579[62] = 0;
   out_7845411576671401579[63] = 0;
   out_7845411576671401579[64] = 0;
   out_7845411576671401579[65] = 0;
}
void h_33(double *state, double *unused, double *out_8838711856581645412) {
   out_8838711856581645412[0] = state[16];
   out_8838711856581645412[1] = state[17];
   out_8838711856581645412[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1569382161289527244) {
   out_1569382161289527244[0] = 0;
   out_1569382161289527244[1] = 0;
   out_1569382161289527244[2] = 0;
   out_1569382161289527244[3] = 0;
   out_1569382161289527244[4] = 0;
   out_1569382161289527244[5] = 0;
   out_1569382161289527244[6] = 0;
   out_1569382161289527244[7] = 0;
   out_1569382161289527244[8] = 0;
   out_1569382161289527244[9] = 0;
   out_1569382161289527244[10] = 0;
   out_1569382161289527244[11] = 0;
   out_1569382161289527244[12] = 0;
   out_1569382161289527244[13] = 0;
   out_1569382161289527244[14] = 0;
   out_1569382161289527244[15] = 0;
   out_1569382161289527244[16] = 1;
   out_1569382161289527244[17] = 0;
   out_1569382161289527244[18] = 0;
   out_1569382161289527244[19] = 0;
   out_1569382161289527244[20] = 0;
   out_1569382161289527244[21] = 0;
   out_1569382161289527244[22] = 0;
   out_1569382161289527244[23] = 0;
   out_1569382161289527244[24] = 0;
   out_1569382161289527244[25] = 0;
   out_1569382161289527244[26] = 0;
   out_1569382161289527244[27] = 0;
   out_1569382161289527244[28] = 0;
   out_1569382161289527244[29] = 0;
   out_1569382161289527244[30] = 0;
   out_1569382161289527244[31] = 0;
   out_1569382161289527244[32] = 0;
   out_1569382161289527244[33] = 0;
   out_1569382161289527244[34] = 0;
   out_1569382161289527244[35] = 0;
   out_1569382161289527244[36] = 0;
   out_1569382161289527244[37] = 0;
   out_1569382161289527244[38] = 0;
   out_1569382161289527244[39] = 1;
   out_1569382161289527244[40] = 0;
   out_1569382161289527244[41] = 0;
   out_1569382161289527244[42] = 0;
   out_1569382161289527244[43] = 0;
   out_1569382161289527244[44] = 0;
   out_1569382161289527244[45] = 0;
   out_1569382161289527244[46] = 0;
   out_1569382161289527244[47] = 0;
   out_1569382161289527244[48] = 0;
   out_1569382161289527244[49] = 0;
   out_1569382161289527244[50] = 0;
   out_1569382161289527244[51] = 0;
   out_1569382161289527244[52] = 0;
   out_1569382161289527244[53] = 0;
   out_1569382161289527244[54] = 0;
   out_1569382161289527244[55] = 0;
   out_1569382161289527244[56] = 0;
   out_1569382161289527244[57] = 0;
   out_1569382161289527244[58] = 0;
   out_1569382161289527244[59] = 0;
   out_1569382161289527244[60] = 0;
   out_1569382161289527244[61] = 0;
   out_1569382161289527244[62] = 1;
   out_1569382161289527244[63] = 0;
   out_1569382161289527244[64] = 0;
   out_1569382161289527244[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6296950856560866654) {
  H(in_vec, out_6296950856560866654);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2899646891747653485) {
  err_fun(nom_x, delta_x, out_2899646891747653485);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8154559542040542297) {
  inv_err_fun(nom_x, true_x, out_8154559542040542297);
}
void live_H_mod_fun(double *state, double *out_4390300350310679035) {
  H_mod_fun(state, out_4390300350310679035);
}
void live_f_fun(double *state, double dt, double *out_8268551332720580037) {
  f_fun(state,  dt, out_8268551332720580037);
}
void live_F_fun(double *state, double dt, double *out_1164008229608083872) {
  F_fun(state,  dt, out_1164008229608083872);
}
void live_h_4(double *state, double *unused, double *out_2262361584068828184) {
  h_4(state, unused, out_2262361584068828184);
}
void live_H_4(double *state, double *unused, double *out_8086601223300992224) {
  H_4(state, unused, out_8086601223300992224);
}
void live_h_9(double *state, double *unused, double *out_4303923515652599437) {
  h_9(state, unused, out_4303923515652599437);
}
void live_H_9(double *state, double *unused, double *out_7845411576671401579) {
  H_9(state, unused, out_7845411576671401579);
}
void live_h_10(double *state, double *unused, double *out_3990839466442438769) {
  h_10(state, unused, out_3990839466442438769);
}
void live_H_10(double *state, double *unused, double *out_6460755846635292532) {
  H_10(state, unused, out_6460755846635292532);
}
void live_h_12(double *state, double *unused, double *out_8824834610017378240) {
  h_12(state, unused, out_8824834610017378240);
}
void live_H_12(double *state, double *unused, double *out_3067144815269030429) {
  H_12(state, unused, out_3067144815269030429);
}
void live_h_35(double *state, double *unused, double *out_3004299637425634318) {
  h_35(state, unused, out_3004299637425634318);
}
void live_H_35(double *state, double *unused, double *out_4719939165928384848) {
  H_35(state, unused, out_4719939165928384848);
}
void live_h_32(double *state, double *unused, double *out_8458500521587119713) {
  h_32(state, unused, out_8458500521587119713);
}
void live_H_32(double *state, double *unused, double *out_6364778675639284450) {
  H_32(state, unused, out_6364778675639284450);
}
void live_h_13(double *state, double *unused, double *out_241671530149260146) {
  h_13(state, unused, out_241671530149260146);
}
void live_H_13(double *state, double *unused, double *out_2100740473575830672) {
  H_13(state, unused, out_2100740473575830672);
}
void live_h_14(double *state, double *unused, double *out_4303923515652599437) {
  h_14(state, unused, out_4303923515652599437);
}
void live_H_14(double *state, double *unused, double *out_7845411576671401579) {
  H_14(state, unused, out_7845411576671401579);
}
void live_h_33(double *state, double *unused, double *out_8838711856581645412) {
  h_33(state, unused, out_8838711856581645412);
}
void live_H_33(double *state, double *unused, double *out_1569382161289527244) {
  H_33(state, unused, out_1569382161289527244);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
